name: CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: go mod tidy

    - name: Build
      run: go build -o app

    - name: Run tests
      run: echo "No tests yet"

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/go-postgres-app:${{ github.sha }} .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/go-postgres-app:${{ github.sha }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Server via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/go-postgres-app:${{ github.sha }}
          docker stop app || true
          docker rm app || true
          docker run -d --name app -p 80:8080 ${{ secrets.DOCKER_USERNAME }}/go-postgres-app:${{ github.sha }}
